cabal-version:      2.2
category:           Biology
build-type:         Simple
name:               phylogenetic-component-graph
version:            0.1.0.1

author:             Ward Wheeler
maintainer:         wheeler@amnh.org
license:            BSD-3-Clause
license-file:       LICENSE

synopsis:           Program and library for general phylogenetic graph search

description:        Phylogenetic Componet Graph provides a library for
                    interacting with phylogenetic graphs. It defines a
                    decalartive scripting language for defining phylogenetic
                    searches. Said scripts can be evaluated by the provided pcg
                    program to perform a phylogenetic search on an input dataset.

extra-source-files:
    AUTHORS.md
    CHANGELOG.md
    FUNDING.md
    README.md
    
        
common dependencies

  build-depends:
    ansi-wl-pprint           >= 0.6.8     && < 0.7,
    base                     >= 4.11      && < 5.0,
    bimap                    >= 0.3       && < 0.4,
    binary                   >= 0.6       && < 1.0,
    bv-little                >= 1.0       && < 2.0,
    bytestring               >= 0.10.8    && < 0.11,
    case-insensitive         >= 1.2.0     && < 1.3,
    cassava                  >= 0.5       && < 0.6,
    compact                  >= 0.1       && < 2.0,
    -- >=0.5.8 Required for Data.Map.restrictKeys
    containers               >= 0.5.8     && < 0.7,
    data-default             >= 0.5.2     && < 0.8,
    deepseq                  >= 1.3       && < 2.0,
    directory                >= 1.3       && < 2.0,
    dlist                    >= 0.8       && < 1.0,
    filepath                 >= 1.4       && < 2.0,
    foldl                    >= 1.3.2     && < 2.0,
    free                     >= 5.0       && < 6.0,
    gitrev                   >= 1.3       && < 2.0,
    Glob                     >= 0.10      && < 2.0,
    -- >=2999.20 Required for forgiving construction of DOT object
    graphviz                 >= 2999.20   && < 3000,
    hashable                 >= 1.2       && < 2.0,
    integer-gmp              >= 1.0       && < 2.0,
    keys                     >= 3.0       && < 4.0,
    lens                     >= 4.17      && < 5.0,
    matrix                   >= 0.3.6     && < 0.4,
    megaparsec               >= 7.0       && < 7.1,
    MemoTrie,
    mmark,            
    modern-uri,            
    mono-traversable         >= 1.0       && < 2.0,
    mtl                      >= 2.0       && < 3.0,
    optparse-applicative     >= 0.14      && < 0.15,
    parallel                 >= 3.2       && < 4.0,
    parser-combinators       >= 1.0       && < 1.1,
    pipes                    >= 4.0       && < 5.0,            
    pointed                  >= 5.0       && < 6.0,
    pretty-tree              >= 0.1       && < 0.2,
    process                  >= 1.6       && < 2.0,
    QuickCheck               >= 2.12      && < 3.0,
    quickcheck-instances     >= 0.3.17    && < 1.0,
    random                   >= 1.0       && < 2.0,
    random-shuffle           >= 0.0.4     && < 0.1,
    safe                     >= 0.3.17    && < 0.4,
    scientific               >= 0.3.6     && < 0.4,
    -- required for Data.Semigroup.Foldable.toNonEmpty
    semigroupoids            >= 5.2.1     && < 5.4,
    semigroups               >= 0.18      && < 1.0,
    smallcheck               >= 1.1.5     && < 2.0,
    tasty                    >= 1.2       && < 2.0,
    tasty-golden             >= 2.3       && < 3.0,
    tasty-hunit              >= 0.10      && < 1.0,
    tasty-quickcheck         >= 0.9       && < 1.0,
    tasty-rerun              >= 1.1.14    && < 2.0,
    tasty-smallcheck         >= 0.8       && < 1.0,
    template-haskell,            
    text                     >= 1.2       && < 2.0,
    text-short               >= 0.1       && < 1.0,
    text-show                >= 3.0       && < 4.0,
    text-show-instances      >= 3.0       && < 4.0,
    time                     >= 1.8.0     && < 1.9,
    transformers             >= 0.5.5     && < 1.0,
    unordered-containers     >= 0.2.9     && < 1.0,
    validation               >= 1         && < 2.0,
    -- >=0.12.0.2 required for compatability with "compact regions"
    vector                   >= 0.12.0.2  && < 0.13,
    vector-binary-instances  >= 0.2.1.1   && < 0.3,
    -- >=3.4 required for corrected definition of (!) & index
    vector-instances         >= 3.4       && < 3.5,
    xml                      >= 1.3.14    && < 1.4,


-- Group of buildinfo specifications to correctly build and link to the C & C++:
-- FFI code.
common ffi-buildinfo

  cc-options:       --std=c11

  cxx-options:      --std=c++14

  -- This library is required for linking to the C++ standard template library.
  extra-libraries:  stdc++

  hs-source-dirs:   ffi

  c-sources:
    ffi/external-direct-optimization/alignCharacters.c
    ffi/external-direct-optimization/alignmentMatrices.c
    ffi/external-direct-optimization/c_alignment_interface.c
    ffi/external-direct-optimization/c_code_alloc_setup.c
    ffi/external-direct-optimization/costMatrix.c
    ffi/external-direct-optimization/dyn_character.c
    ffi/external-direct-optimization/ukkCheckPoint.c
    ffi/external-direct-optimization/ukkCommon.c
    ffi/memoized-tcm/costMatrixWrapper.c
    ffi/memoized-tcm/dynamicCharacterOperations.c
    ffi/sequential-align/sequentialAlignInterface.c
    ffi/sequential-align/sequentialAlign.c

  cxx-sources:
    ffi/memoized-tcm/costMatrix_2d.cpp
    ffi/memoized-tcm/costMatrix_3d.cpp

  -- Here we list all directories that contain C & C++ header files that the FFI
  -- tools will need to locate when preprocessing the C files. Without listing
  -- the directories containing the C header files here, the FFI preprocessor
  -- (hsc2hs, c2hs, etc.) will fail to locate the requisite files. Note also,
  -- that the parent directory of the nessicary C & C++ header files must be
  -- specified. The preprocessor will not recursively look in subdirectories for
  -- header files!
  include-dirs:
    ffi/external-direct-optimization
    ffi/memoized-tcm
    ffi/sequential-align


-- A litany of GHC warnings designed to alert us during the build of any common
-- pitfalls, future compatibility issues, or coding conventions.
common ghc-flags

  ghc-options:
    -- Optimization flags
    -O2
    -fexpose-all-unfoldings
    -foptimal-applicative-do
    -fspecialize-aggressively
    -- Usability flags
    -fdiagnostics-color=always
    -fhide-source-paths
    -j
    -- Sanity check warnings
    -Wall
    -Wcompat
    -Wdodgy-foreign-imports
    -Wduplicate-exports
    -Wempty-enumerations
    -Widentities
    -Wincomplete-patterns
    -Wincomplete-record-updates
    -Wincomplete-uni-patterns
    -Wmissing-fields
    -Wmissing-home-modules
    -Wmissing-monadfail-instances
    -Wmissing-signatures
    -Wnoncanonical-monadfail-instances
    -Wnoncanonical-monad-instances
    -Wnoncanonical-monoid-instances
    -Woverflowed-literals
    -Woverlapping-patterns
    -Wredundant-constraints
    -Wsemigroup
    -Wtabs
    -Wunrecognised-warning-flags
    -Wunused-binds
    -Wunused-do-bind
    -Wunused-foralls
    -Wunused-imports
    -Wunused-matches
    -Wwrong-do-bind


-- Global deviations from Haskell98
common language-specs

  default-language: Haskell2010

  -- Always use MonadFail(fail), not Monad(fail)
  other-extensions: MonadFailDesugaring


-- Core data-types of PCG.
library pcg-core

  import:
    dependencies,
    ffi-buildinfo,
    ghc-flags,
    language-specs

  hs-source-dirs:
    pcg-core

  build-depends:
    pcg-alphabet,
    pcg-evaluation,
    pcg-file-parsers,
    pcg-utility,
    pcg-serialize,
    pcg-tcm,

  exposed-modules:
    Bio.Character
    Bio.Character.Decoration.Additive
    Bio.Character.Decoration.Continuous
    Bio.Character.Decoration.Discrete
    Bio.Character.Decoration.Dynamic
    Bio.Character.Decoration.Fitch
    Bio.Character.Decoration.Metric
    Bio.Character.Decoration.NonMetric
    Bio.Character.Encodable
    Bio.Character.Encodable.Continuous
    Bio.Character.Type
    Bio.Metadata
    Bio.Metadata.CharacterName
    Bio.Metadata.Continuous
    Bio.Metadata.Discrete
    Bio.Metadata.DiscreteWithTCM
    Bio.Metadata.Dynamic
    Bio.Sequence
    Bio.Sequence.Block
    Bio.Sequence.Character
    Bio.Sequence.Metadata
    Bio.Graph
    Bio.Graph.Component
    Bio.Graph.Constructions
    Bio.Graph.LeafSet
    Bio.Graph.Node
    Bio.Graph.Node.Context
    Bio.Graph.PhylogeneticDAG
    Bio.Graph.ReferenceDAG
    Bio.Graph.ReferenceDAG.Internal
    Bio.Graph.Solution
    Bio.Graph.ZipperDAG
    Data.EdgeLength
    Data.NodeLabel
    Data.TopologyRepresentation
    Test.Custom.NucleotideSequence

  other-modules:
    Bio.Character.Decoration.Additive.Class
    Bio.Character.Decoration.Additive.Internal
    Bio.Character.Decoration.Continuous.Class
    Bio.Character.Decoration.Continuous.Internal
    Bio.Character.Decoration.Dynamic.Class
    Bio.Character.Decoration.Dynamic.Internal
    Bio.Character.Decoration.Fitch.Class
    Bio.Character.Decoration.Fitch.Internal
    Bio.Character.Decoration.Metric.Class
    Bio.Character.Decoration.Metric.Internal
    Bio.Character.Decoration.NonMetric.Class
    Bio.Character.Decoration.NonMetric.Internal
    Bio.Character.Decoration.Shared
    Bio.Character.Encodable.Continuous.Class
    Bio.Character.Encodable.Continuous.Internal
    Bio.Character.Encodable.Dynamic
    Bio.Character.Encodable.Dynamic.Class
    Bio.Character.Encodable.Dynamic.Internal
    Bio.Character.Encodable.Internal
    Bio.Character.Encodable.Static
    Bio.Character.Encodable.Static.Class
    Bio.Character.Encodable.Static.Internal
    Bio.Character.Encodable.Stream
    Bio.Metadata.General
    Bio.Metadata.General.Class
    Bio.Metadata.General.Internal
    Bio.Metadata.Discrete.Class
    Bio.Metadata.Discrete.Internal
    Bio.Metadata.DiscreteWithTCM.Class
    Bio.Metadata.DiscreteWithTCM.Internal
    Bio.Metadata.Dynamic.Class
    Bio.Metadata.Dynamic.Internal
    Bio.Graph.BinaryRenderingTree
    Bio.Graph.Forest
    Bio.Graph.Node.Internal
    Bio.Graph.PhylogeneticDAG.Class
    Bio.Graph.PhylogeneticDAG.Internal
    Bio.Graph.PhylogeneticDAG.NetworkEdgeQuantification
    Bio.Graph.PhylogeneticDAG.DynamicCharacterRerooting
    Bio.Graph.PhylogeneticDAG.Postorder
    Bio.Graph.PhylogeneticDAG.Preorder
    Bio.Graph.PhylogeneticDAG.Reification
    Bio.Graph.ZipperDAG.Internal
    Bio.Sequence.Block.Builder
    Bio.Sequence.Block.Character
    Bio.Sequence.Block.Internal
    Bio.Sequence.Block.Metadata
    Bio.Sequence.Internal
    Data.EdgeSet


-- A general purpose library for character state names.
--
-- Defines custom types for working with an alphabet of character
-- state names dealing with ambiguity groups.
library pcg-alphabet

  import:
    dependencies,
    ghc-flags,
    language-specs

  hs-source-dirs:    
    pcg-alphabet/src

  build-depends:
    pcg-utility,
    pcg-serialize,

  exposed-modules:
    Data.Alphabet
    Data.Alphabet.IUPAC
    Data.Alphabet.Special
 
  other-modules:
    Data.Alphabet.Internal


-- A library for performing parsimony analysis.
library pcg-analysis

  import:
    dependencies,
    ffi-buildinfo,
    ghc-flags,
    language-specs


  hs-source-dirs:
    pcg-analysis/src

  build-depends:
    pcg-alphabet,
    pcg-evaluation,
    pcg-file-parsers,
    pcg-utility,
    pcg-core,
    pcg-serialize,
    pcg-tcm,

  exposed-modules:
    Analysis.Parsimony.Additive
    Analysis.Parsimony.Dynamic.DirectOptimization
    Analysis.Parsimony.Dynamic.DirectOptimization.Pairwise
    Analysis.Parsimony.Dynamic.DirectOptimization.Pairwise.Internal
    Analysis.Parsimony.Dynamic.SequentialAlign
    Analysis.Parsimony.Fitch
    Analysis.Parsimony.Sankoff
    Analysis.Scoring
    Analysis.TotalEdgeCost

    Test.Custom.DynamicCharacterNode

  other-modules:
    Analysis.Parsimony.Additive.Internal
    Analysis.Parsimony.Dynamic.DirectOptimization.Internal
--    Analysis.Parsimony.Dynamic.DirectOptimization.Pairwise.Internal
    Analysis.Parsimony.Dynamic.DirectOptimization.Pairwise.Ukkonen.Internal
    Analysis.Parsimony.Fitch.Internal
    Analysis.Parsimony.Sankoff.Internal
    Analysis.Parsimony.Dynamic.DirectOptimization.Pairwise.FFI
    Analysis.Parsimony.Dynamic.DirectOptimization.Pairwise.NeedlemanWunsch
    Analysis.Parsimony.Dynamic.DirectOptimization.Pairwise.Ukkonen
    Analysis.Parsimony.Dynamic.DirectOptimization.Pairwise.Ukkonen.Ribbon
    Analysis.Parsimony.Dynamic.SequentialAlign.FFI


-- Library for taking data from disperate input sources and converting the data
-- to a normalized form.
library pcg-data-normalization

  import:             
    dependencies,
    ghc-flags,
    language-specs

  hs-source-dirs:
    pcg-data-normalization/src

  build-depends:
    pcg-alphabet,
    pcg-core,
    pcg-file-parsers,
    pcg-utility,
    pcg-serialize,
    pcg-tcm,

  exposed-modules:
    Data.Normalization.Character
    Data.Normalization.Metadata
    Data.Normalization.Topology
  
  other-modules:
    Data.Normalization.Character.Class
    Data.Normalization.Character.Internal
    Data.Normalization.Metadata.Class
    Data.Normalization.Metadata.Internal


-- A library for the evaluation monad used by pcg.
library pcg-evaluation

  import:
    dependencies,
    ghc-flags,
    language-specs

  hs-source-dirs:
    pcg-evaluation/src

  exposed-modules:
    Control.Evaluation
    Control.Evaluation.Unit
    Control.Monad.Logger

  other-modules:
    Control.Evaluation.Internal
    Control.Evaluation.Trans


-- Parsers for the input file types accepted by PCG
--
-- Defines file parsers for Fasta files with sequence spliting,
-- Newick files with support for extended newick format, Nexus
-- files (though many block types are skipped), DOT files as
-- graph input, TNT files (though many commands are skipped),
-- and custom file formats for parsing transition cost matrices
-- with an alphabet, and the depricated vertex/edge/root set
-- format.
library pcg-file-parsers

  import:
    dependencies,
    ghc-flags,
    language-specs

  hs-source-dirs:
    pcg-file-parsers/src

  build-depends:
    pcg-alphabet,
    pcg-utility,

  exposed-modules:
    File.Format.Dot
    File.Format.Fasta
    File.Format.Fastc
    File.Format.Newick
    File.Format.Nexus
    File.Format.TNT
    File.Format.TransitionCostMatrix
    File.Format.VertexEdgeRoot

  other-modules:
    File.Format.Fasta.Converter
    File.Format.Fasta.Internal
    File.Format.Fasta.Parser
    File.Format.Fastc.Parser
    File.Format.Newick.Internal
    File.Format.Newick.Parser
    File.Format.Nexus.Data
    File.Format.Nexus.Parser
    File.Format.Nexus.Partition
    File.Format.Nexus.Validate
    File.Format.TNT.Command.CCode
    File.Format.TNT.Command.CNames
    File.Format.TNT.Command.Cost
    File.Format.TNT.Command.NStates
    File.Format.TNT.Command.Procedure
    File.Format.TNT.Command.TRead
    File.Format.TNT.Command.XRead
    File.Format.TNT.Parser
    File.Format.TNT.Partitioning
    File.Format.TNT.Internal
    File.Format.TransitionCostMatrix.Parser
    File.Format.VertexEdgeRoot.Parser
    Text.Megaparsec.Custom


-- Defines the grammar & specific commands of the PCG langauge
--
-- In addition to the grammar definition, this library exports a parser for the
-- grammar. Each command available in PCG is defined here and a script parser is
-- exported to parse a sequence of commands which represents the computation to
-- be performed by PCG.
library pcg-language

  import:
    dependencies,
    ghc-flags,
    language-specs

  hs-source-dirs:
    pcg-language

  exposed-modules:
    PCG.Syntax
    PCG.Command.Build
    PCG.Command.Echo
    PCG.Command.Read
    PCG.Command.Report
    PCG.Command.Save
    PCG.Command.Load
    PCG.Syntax.Combinators

  other-modules:
    PCG.Syntax.Parser
    PCG.Syntax.Primitive


-- A library for defining custom serialisation and rendering functionality.
--
-- Defines custom helper functions for serializing to data formats and related
-- to text representations.
library pcg-serialize

  import:
    dependencies,
    ghc-flags,
    language-specs

  hs-source-dirs:
    pcg-serialize/src

  exposed-modules:
    Data.Text.Short.Custom
    TextShow.Custom
    Text.Newick.Class
    Text.XML
    Text.XML.Class
    Text.XML.Custom
 
  other-modules:


-- A general purpose library for working with transition cost matrices.
library pcg-tcm

  import:
    dependencies,
    ffi-buildinfo,
    ghc-flags,
    language-specs,

  hs-source-dirs:
    pcg-tcm/src

  build-depends:
    pcg-utility,
    pcg-serialize,
    base                     >= 4.11      && < 5.0,
    containers              ^>= 0.5.8     && < 0.7,
    deepseq                 ^>= 1.4.4     && < 1.5,
    mono-traversable        ^>= 1.0.10    && < 1.1,
    QuickCheck              ^>= 2.12.6    && < 2.13,
    vector                   >= 0.12.0.2  && < 0.13,

  exposed-modules:
    Bio.Character.Exportable
    Bio.Character.Exportable.MemoizationData
    Bio.MetricRepresentation
    Bio.TCM
    Bio.TCM.Dense
    Bio.TCM.Memoized

  other-modules:
    Bio.Character.Exportable.Class
    Bio.TCM.Internal
    Bio.TCM.Dense.FFI
    Bio.TCM.Memoized.FFI


--  Collection of utility functions and data structures
--
--  Defines custom data structures for special use cases,
--  more abstract functions that base provides, and reexported
--  correcting to deficient libraries.
library pcg-utility

  import:
    dependencies,
    ghc-flags,
    language-specs

  hs-source-dirs:
    pcg-utility/src

  exposed-modules:
    Control.Parallel.Custom
    Data.BitMatrix
    Data.Binary.Utility
    Data.Either.Custom
    Data.Foldable.Custom
    Data.List.Utility
    Data.Matrix.NotStupid
    Data.MemoVector
    Data.MutualExclusionSet
    Data.Range
    Data.Render.Utility
    Data.ShortText.Custom
    Data.TextShow.Custom
    Data.Tuple.Utility
    Data.UnionSet
    Data.Vector.Custom
    Data.Vector.NonEmpty
--    FFI.Character.Exportable
--    FFI.Character.Exportable.Class
    Numeric.Extended
    Numeric.Extended.Natural
    Numeric.Extended.Real
    Numeric.NonNegativeAverage
    Test.HUnit.Custom
    Test.QuickCheck.Arbitrary.Instances


  other-modules:
    Data.BitMatrix.Internal
    Data.MutualExclusionSet.Internal
    Numeric.Extended.Internal


executable pcg

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    Main.hs

  ghc-options:
    -threaded -rtsopts

  hs-source-dirs:
    app

  build-depends:
    pcg-alphabet,
    pcg-analysis,
    pcg-evaluation,
    pcg-core,
    pcg-data-normalization,            
    pcg-file-parsers,
    pcg-language,
    pcg-utility,
    pcg-serialize,
    pcg-tcm,

  other-modules:
    Paths_phylogenetic_component_graph
    PCG.Command.Build.Evaluate
    PCG.Command.Echo.Evaluate
    PCG.Command.Load.Evaluate
    PCG.Command.Read.DecorationInitialization
    PCG.Command.Read.Evaluate
    PCG.Command.Read.ReadError
    PCG.Command.Read.Unification.Master
    PCG.Command.Read.Unification.UnificationError
    PCG.Command.Report.Evaluate
    PCG.Command.Report.GraphViz
    PCG.Command.Report.Metadata
    PCG.Command.Save.Evaluate
    PCG.CommandLineOptions
    PCG.CommandLineOptions.Display
    PCG.CommandLineOptions.Types
    PCG.Computation.Internal
    PCG.Software.Credits
    PCG.Software.Metadata            


executable fasta-differ

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    fasta-differ.hs

  hs-source-dirs:
    utils

  build-depends:
    pcg-file-parsers,


executable 2d-do-comparison

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    2d-do-comparison.hs

  hs-source-dirs:
    utils

  build-depends:
    pcg-alphabet,
    pcg-analysis,
    pcg-core,
    pcg-tcm,


executable 3d-do-comparison

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    3d-do-comparison.hs

  hs-source-dirs:
    utils

  build-depends:
    pcg-alphabet,
    pcg-analysis,
    pcg-core,
    pcg-tcm,


executable affine-safety

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    affine-safety.hs

  hs-source-dirs:
    utils

  build-depends:
    pcg-alphabet,
    pcg-analysis,
    pcg-core,
    pcg-tcm,


executable generate-data-set

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    generate-data-set.hs

  hs-source-dirs:
    utils


executable generate-tcm

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    generate-tcm.hs

  hs-source-dirs:
    utils

  build-depends:
    pcg-utility,


executable newick-resolver

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    newick-resolver.hs

  hs-source-dirs:
    utils

  build-depends:
    pcg-file-parsers,


executable sequential-alignment-invariants

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    sequential-alignment-invariants.hs

  hs-source-dirs:
    utils

  build-depends:
    pcg-alphabet,
    pcg-analysis,
    pcg-core,
    pcg-tcm,


executable three-way-mean-check

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    three-way-mean-check.hs

  hs-source-dirs:
    utils

  build-depends:
    pcg-alphabet,
    pcg-analysis,
    pcg-core,


executable ukkonen-do-comparison

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    ukkonen-do-comparison.hs

  hs-source-dirs:
    utils

  build-depends:
    pcg-alphabet,
    pcg-analysis,
    pcg-core,
    pcg-tcm,


executable pcg-file-parsers-file-tests

  import:
    dependencies,
    ghc-flags,
    language-specs
         
  main-is:
    FileTests.hs

  ghc-options:
    -threaded

  hs-source-dirs:
    pcg-file-parsers/test
  
  build-depends:
    pcg-file-parsers

  other-modules:
    Test.Custom.Parse
    TestSuite.GeneratedTests
    TestSuite.GeneratedTests.Fasta
    TestSuite.GeneratedTests.Fastc
    TestSuite.GeneratedTests.Internal
    TestSuite.GeneratedTests.Nexus
    TestSuite.GeneratedTests.TNT


test-suite integration-tests

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    IntegrationTests.hs

  type:
    exitcode-stdio-1.0

  ghc-options:
    -threaded -with-rtsopts=-N

  hs-source-dirs:
    test

  build-depends:
    pcg-alphabet,
    pcg-serialize,
    pcg-core,
    pcg-utility,

  other-modules:
    TestSuite.GoldenTests
    TestSuite.ScriptTests
    TestSuite.SubProcess


test-suite unit-tests

  import:
    dependencies,
    ffi-buildinfo,
    ghc-flags,
    language-specs

  main-is:
    UnitTests.hs

  type:
    exitcode-stdio-1.0

  ghc-options:
    -threaded
--    -with-rtsopts=-N4

  hs-source-dirs:
    pcg-analysis, pcg-core, app, ffi, test

  build-depends:
    pcg-alphabet,
    pcg-analysis,
    pcg-evaluation,
    pcg-core,
    pcg-utility,
    pcg-serialize,
    pcg-tcm,

  other-modules:
    Bio.Character
    Bio.Character.Encodable
    Bio.Character.Encodable.Continuous
    Bio.Character.Encodable.Continuous.Class
    Bio.Character.Encodable.Continuous.Internal
    Bio.Character.Encodable.Dynamic
    Bio.Character.Encodable.Dynamic.Class
    Bio.Character.Encodable.Dynamic.Internal
    Bio.Character.Encodable.Dynamic.Test
    Bio.Character.Encodable.Static
    Bio.Character.Encodable.Static.Class
    Bio.Character.Encodable.Static.Internal
    Bio.Character.Encodable.Static.Test
    Bio.Character.Encodable.Internal
    Bio.Character.Encodable.Static
    Bio.Character.Encodable.Static.Class
    Bio.Character.Encodable.Static.Internal
    Bio.Character.Encodable.Stream
    Bio.Graph.BinaryRenderingTree
    Bio.Graph.Component
    Bio.Graph.LeafSet
    Bio.Graph.ReferenceDAG.Internal
    Bio.Graph.ReferenceDAG.Test
    Data.EdgeSet
    TestSuite.ExecutableTests
    TestSuite.LibraryTests

-- This should not be necessary
    Test.Custom.NucleotideSequence
    Bio.Graph.Node.Context


test-suite pcg-utility-test-suite

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:          
    TestSuite.hs

  type:             
    exitcode-stdio-1.0

  hs-source-dirs:
    pcg-utility/test

  build-depends:
    pcg-alphabet,
    pcg-utility,
    pcg-serialize,
                    
  other-modules:
    Control.Parallel.Test
    Data.BitMatrix.Test
    Data.MutualExclusionSet.Test
    Numeric.Extended.Natural.Test
    Numeric.Extended.Real.Test
    Numeric.NonNegativeAverage.Test
    Data.List.Test


test-suite pcg-file-parsers-unit-tests

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:          
    TestSuite.hs

  type:             
    exitcode-stdio-1.0

  hs-source-dirs:   
    pcg-file-parsers/src,
    pcg-file-parsers/test

  ghc-options:      
    -threaded

  build-depends:
    pcg-alphabet,
    pcg-utility,
    pcg-serialize,

  other-modules:
       File.Format.Fasta.Internal
       File.Format.Fasta.Parser
       File.Format.Fasta.Test
       File.Format.Fastc.Parser
       File.Format.Fastc.Test
       File.Format.Newick.Internal
       File.Format.Newick.Parser
       File.Format.Newick.Test
       File.Format.TNT.Command.CCode
       File.Format.TNT.Command.CNames
       File.Format.TNT.Command.Procedure
       File.Format.TNT.Command.TRead
       File.Format.TNT.Command.XRead
       File.Format.TNT.Internal
       File.Format.TNT.Test
       File.Format.TransitionCostMatrix.Parser
       File.Format.TransitionCostMatrix.Test
       File.Format.VertexEdgeRoot.Parser
       File.Format.VertexEdgeRoot.Test
       Test.Custom.Parse
       Text.Megaparsec.Custom
       Text.Megaparsec.Custom.Test


test-suite pcg-alphabet-test-suite

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    TestSuite.hs

  type:
    exitcode-stdio-1.0

  hs-source-dirs:
    pcg-alphabet/test

  ghc-options:
    -threaded

  build-depends:
    pcg-alphabet,

  other-modules:
    Data.Alphabet.Test

test-suite pcg-analysis-test-suite

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:          
    TestSuite.hs

  type:             
    exitcode-stdio-1.0

  hs-source-dirs:   
    pcg-analysis/test

  build-depends:
    pcg-analysis,
    pcg-utility,
    pcg-core,
    pcg-tcm,
                    
  other-modules:
    Analysis.Parsimony.Dynamic.DirectOptimization.Pairwise.Test


test-suite pcg-evaluation-test-suite

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    TestSuite.hs

  type:
    exitcode-stdio-1.0

  hs-source-dirs:
    pcg-evaluation/test

  ghc-options:
    -threaded

  build-depends:
    pcg-evaluation,

  other-modules:
    Control.Evaluation.Test

    
test-suite pcg-tcm-test-suite

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    TestSuite.hs

  type:
    exitcode-stdio-1.0

  hs-source-dirs:
    pcg-tcm/test

  ghc-options:
    -threaded

  build-depends:
    pcg-utility,
    pcg-tcm,

  other-modules:
    TCM.Test


benchmark pcg-utility-benchmark-suite

  import:
      dependencies,
      ghc-flags,
      language-specs

  main-is:          
    Benchmarks.hs

  type:             
    exitcode-stdio-1.0

  hs-source-dirs: 
    pcg-utility/bench

  build-depends:
    pcg-utility,

  ghc-options:
    -fdicts-cheap
    -fmax-simplifier-iterations=10
    -fspec-constr-count=6
    -threaded
                    
  other-modules:
    Data.MutualExclusionSet.Bench
    Numeric.Extended.Natural.Bench

