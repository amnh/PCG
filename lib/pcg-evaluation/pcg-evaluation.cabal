cabal-version:      2.2
Category:           Biology
build-type:         Simple
name:               pcg-evaluation
version:            0.2.0

author:             Ward Wheeler
maintainer:         wheeler@amnh.org
license:            BSD-3-Clause
license-file:       LICENSE

synopsis:           Monad transformer for managing the stateful evaluation of PCG scripts.

description:        This monad transformer provides a concrete, efficient implementation for
                    many useful monad typeclasses required to manage the effects of the
                    evaluating PCG scripts. PCG script evaluation is inherently stateful,
                    requiring management of random seeds, logs, IO, global state variables,
                    and error short-ciruiting.

        
common dependencies

  build-depends:
    base                     >= 4.11      && < 5.0,
    deepseq                  >= 1.4       && < 2.0,
    dlist,            
    mtl                      >= 2.0       && < 3.0,
    QuickCheck               >= 2.12      && < 3.0,
    -- required for Data.Semigroup.Foldable.toNonEmpty
    semigroupoids            >= 5.2.1     && < 5.4,
    semigroups               >= 0.18      && < 1.0,
    transformers             >= 0.5.6     && < 1.0,


-- A litany of GHC warnings designed to alert us during the build of any common
-- pitfalls, future compatibility issues, or coding conventions.
common ghc-flags

  ghc-options:
    -- Optimization flags
    -O2
    -fexpose-all-unfoldings
    -foptimal-applicative-do
    -fspecialize-aggressively
    -- Usability flags
    -fdiagnostics-color=always
    -fhide-source-paths
    -j
    -- Sanity check warnings
    -Wall
    -Wcompat
    -Wdodgy-foreign-imports
    -Wduplicate-exports
    -Wempty-enumerations
    -Widentities
    -Wincomplete-patterns
    -Wincomplete-record-updates
    -Wincomplete-uni-patterns
    -Wmissing-deriving-strategies
    -Wmissing-fields
    -Wmissing-home-modules
    -Wmissing-monadfail-instances
    -Wmissing-signatures
    -Wnoncanonical-monad-instances
    -Wnoncanonical-monoid-instances
    -Woverflowed-literals
    -Woverlapping-patterns
    -Wredundant-constraints
    -Wsemigroup
    -Wtabs
    -Wunrecognised-warning-flags
    -Wunused-binds
    -Wunused-do-bind
    -Wunused-foralls
    -Wunused-imports
    -Wunused-matches
    -Wwrong-do-bind


-- Global deviations from Haskell98
common language-specs

  default-language: Haskell2010

  -- Always use MonadFail(fail), not Monad(fail)
  -- and explicit deriving strategy
  other-extensions:
    DerivingStrategies
    MonadFailDesugaring


library

  import:
    dependencies,
    ghc-flags,
    language-specs

  hs-source-dirs:
    src

  build-depends:
    bimap                    >= 0.3       && < 1.0,
    containers               >= 0.5.8     && < 1.0,
    quickcheck-instances     >= 0.3.17    && < 1.0,
    text                     >= 1.2       && < 2.0,
    text-show                >= 3.8.1     && < 4.0,            
                
  exposed-modules:
    Control.Evaluation
    Control.Monad.Logger
    System.ErrorPhase              

  other-modules:
    Control.Evaluation.Notification
    Control.Evaluation.Result
    Control.Evaluation.Trans


test-suite test-suite

  import:
    dependencies,
    ghc-flags,
    language-specs

  main-is:
    TestSuite.hs

  type:
    exitcode-stdio-1.0

  hs-source-dirs:
    test

  ghc-options:
    -threaded

  build-depends:
    pcg-evaluation,
    tasty                    >= 1.2       && < 2.0,
    tasty-quickcheck         >= 0.9       && < 1.0,
    tasty-rerun              >= 1.1.14    && < 2.0,

  other-modules:
    Control.Evaluation.Test
    System.ErrorPhase.Test
