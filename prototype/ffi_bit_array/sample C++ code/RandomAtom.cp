// Assignment 0, CSci 335, Fall 2001// Eric Ford// 09/06/01// This class returns a random char or int, depending on the parameter. // The code is (slightly) modified from code found on pp 438-439 of the text.template <class Object> RandomAtom<Object>::RandomAtom():myParam("int")	// myParam defaults to integer{	int initialValue = clock();		// clock() is used as seed	if (initialValue < 0)		initialValue += M;		state = initialValue;	if (0 == state)		state = 1;}template <class Object>void RandomAtom<Object>::AtomInit(string sParamIn)	// initializes the object to create either chars or ints	// default it int, to receive chars, input parameter must be "char"{	myParam = sParamIn;}/* *	 Return a pseudoramdom int, and change the internal state. */template <class Object>Object RandomAtom<Object>::RandomInt(){	int tmpState = A * (state % Q) - R * (state / Q);		if (tmpState >= 0)		state = tmpState;	else		state = tmpState + M;			if ("char" == myParam)		// otherwise, defaults to int	{		int nNum = (state % 1000);			// so we have numbers [000,999]		nNum = nNum / 1000.0 * 26 + 97; 	// these numbers are converted to [97,122]		return char (nNum);					// then cast as char and returned	}			else									// just in for sake of easier readability		return  state % 10;}