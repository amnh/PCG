# Choose a lightweight base image; we provide our own build tools.
language: c

os:
  - linux
  - osx

# Required to install stack on Linux
sudo: true

#addons:
#  apt:
#    packages:
#    - libgmp-dev # GHC depends on system GMP (maybe?).
#    - build-essentials

before_install:
  # MacOS setups
  # Install Cabal & GHC
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ghc cabal-install && export PATH=/usr/local/opt/ghc/bin:$PATH; fi

  # Linux initial setup
  # Install required system packages, newer GCC than comes with Trusty image
  # We do this because Travis-CI dropped the ball, and the 'addons' section 
  # doesn't correctly parse. We have to explicitly use the Debian package 
  # manager to install the system dependedncies for Linux builds.
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
      sudo apt-get update
      sudo apt-get install libgmp-dev
      sudo apt-get install build-essential software-properties-common -y
      sudo apt-get install gcc-snapshot -y
      sudo apt-get install gcc-7 g++-7 -y
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
    fi

  # Create and export path to stack binaries
  - mkdir -p ~/.local/bin
  - export PATH=$HOME/.local/bin:$PATH

  # Download and unpack the stack executable
  - which stack || travis_retry wget -qO- https://get.haskellstack.org/ | sh

  # Download and unpack the hlint executable
  - which hlint || travis_retry curl --progress-bar --location -ohlint.tar.gz https://github.com/$(curl --silent https://github.com/ndmitchell/hlint/releases | grep -o '\"[^\"]*-x86_64-'$TRAVIS_OS_NAME'\.tar\.gz\"' | sed s/\"//g | head -n1)
  - tar -xzf hlint.tar.gz
  - cp    hlint-*/hlint ~/.local/bin/hlint
  - cp -r hlint-*/data	~/.local/bin/data

install:
  # Update stack
  - stack update
  - stack setup --no-terminal

  # Output build tool version information
  - gcc   --version
  - hlint --version
  - cabal --version
  - stack --version
  - stack ghc -- --version

  # Install dependencies
  - stack build --bench --fast --install-ghc --only-dependencies --no-terminal --test

  # Build project
  - stack build --bench --fast --haddock --no-haddock-deps --no-run-benchmarks --no-run-tests --no-terminal

  # Inspect generated .stack-work directories
  - ls .stack-work/dist/
  - ls .stack-work/dist/*/
  - ls .stack-work/dist/*/*/

script:

   - stack test --no-terminal

#  Not run because --coverage flag was removed
#  - stack hpc report

   - hlint app ffi lib src test utils

# Not run because --coverage flag was removed
#after_script:
#  - hpc-coveralls --coverage-mode=StrictlyFullLines
#                  --exclude-dir=prototype
#                  --exclude-dir=test
#                  --exclude-dir=utils
#                  testsuite


# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.local/bin
  - $HOME/.stack
  - $HOME/build/amnh/PCG/.stack-work

git:
  depth: 10
  submodules: false
